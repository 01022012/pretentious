["RSpec.describe TestClass3 do\n\n  context 'Scenario 1' do\n    before do\n\n      var_2172810880 = \"test\"\n      another_object = TestClass1.new(var_2172810880)\n      message = {hello: \"world\", test: another_object, arr_1: [1, 2, 3, 4, 5, another_object], sub_hash: {yes: true, obj: another_object}}\n      test_class_one = TestClass1.new(message)\n      message_1 = \"This is message 2\"\n      test_class_two = TestClass2.new(message_1)\n\n      @fixture = TestClass3.new(test_class_one, test_class_two)\n\n    end\n\n    it 'should pass current expectations' do\n\n\n      # TestClass3#show_messages when passed  should return awesome!!!\n      expect ( @fixture.show_messages ).to equal(\"awesome!!!\")\n\n    end\n  end\n\n  context 'Scenario 2' do\n    before do\n\n      var_2172810880 = \"test\"\n      another_object = TestClass1.new(var_2172810880)\n      message = {hello: \"world\", test: another_object, arr_1: [1, 2, 3, 4, 5, another_object], sub_hash: {yes: true, obj: another_object}}\n      test_class_one = TestClass1.new(message)\n      message_1 = \"This is message 2\"\n      test_class_two = TestClass2.new(message_1)\n\n      @fixture = TestClass3.new(test_class_one, test_class_two)\n\n    end\n\n    it 'should pass current expectations' do\n\n\n      # TestClass3#show_messages when passed  should return awesome!!!\n      expect ( @fixture.show_messages ).to equal(\"awesome!!!\")\n\n    end\n  end\n\nend\n"]